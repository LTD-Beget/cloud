syntax = 'proto3';

package beget.cloud.v1.s3;
import "google/api/annotations.proto";

// Управление S3
//
// Предоставляет набор методов для работы с S3 хранилищем
service S3Service {
    rpc getQuota(GetQuotaRequest) returns (GetQuotaResponse) {
        option (google.api.http) = {
            get: "/v1/cloud/s3/quota",
        };
    }

    rpc changeAccessKey(ChangeAccessKeyRequest) returns (ChangeAccessKeyResponse) {
        option (google.api.http) = {
            patch: "/v1/cloud/s3/{service_id}",
            body: "*"
        };
    }

    rpc changeCors(ChangeCorsRequest) returns (ChangeCorsResponse) {
        option (google.api.http) = {
            patch: "/v1/cloud/s3/{service_id}",
            body: "*"
        };
    }
}

message GetQuotaRequest {
}

message GetQuotaResponse {
    uint64 used_size = 1;
    uint64 available_size = 2;
}

message ChangeAccessKeyRequest {
    string service_id = 1;
}

message ChangeAccessKeyResponse {
    oneof result {
        // Результат запроса: информация о сервисе
        S3 s3 = 1;

        // Результат запроса: ошибка при обновлении информации о сервисе
        Error error = 2;
    }

    message Error {
        // Описание ошибки
        string message = 1;

        // Код ошибки
        Code code = 2;

        enum Code {
            // Зарезервированный код ошибки
            _ = 0;

            SERVICE_NOT_FOUND = 2;

            SERVICE_DISABLED = 6;
        }
    }
}

message ChangeCorsRequest {
    string service_id = 1;
    repeated Cors cors = 2;
}

message ChangeCorsResponse {
    oneof result {
        // Результат запроса: информация о сервисе
        S3 s3 = 1;

        // Результат запроса: ошибка при обновлении информации о сервисе
        Error error = 2;
    }

    message Error {
        // Описание ошибки
        string message = 1;

        // Код ошибки
        Code code = 2;

        enum Code {
            // Зарезервированный код ошибки
            _ = 0;

            SERVICE_NOT_FOUND = 2;

            SERVICE_DISABLED = 3;

            CORS_NOT_FOUND = 4;
        }
    }
}

message S3CreateParams {
    // Признак публичности репозитория
    bool public = 1;
}

message S3CreateError {
    // Описание ошибки
    string message = 1;

    // Код ошибки
    Code code = 2;

    enum Code {
        // Зарезервированный код ошибки
        _ = 0;

        // Недостаточно средств для создания сервиса
        INSUFFICIENT_FUNDS = 1;

        // Неизвестная конфигурация
        CONFIGURATION_NOT_FOUND = 2;

        // Некорректное название сервиса
        INVALID_DISPLAY_NAME = 4;

        // Создание временно недоступно
        TEMPORARILY_UNAVAILABLE = 5;

        // Создание недоступно
        SERVICE_DISABLED = 6;
    }
}

message S3 {
    // Признак публичности репозитория
    bool public = 1;
    string access_key = 2;
    string secret_key = 3;
    string fqdn = 4;
    repeated Cors cors = 5;
    uint64 quota_used_size = 6;
}

message Cors {
    // Тип запроса(GET/POST/PUT/DELETE/HEAD)
    repeated string http_method = 1;
    repeated string http_header = 2;
    uint64 cache_ttl = 3;
    string fqdn = 4;
}