syntax = 'proto3';

package beget.cloud.v1.cloud;
import "google/api/annotations.proto";
import "cloud/proto/v1/mysql.proto";
// do not use structures.proto here for avoid recursive import

service CloudService {
    // Получить список доступных конфигураций
    rpc getConfigurationList (GetConfigurationListRequest) returns (GetConfigurationListResponse) {
        option (google.api.http) = {
            get: "/v1/cloud/configuration"
        };
    }

    // Создать облачный сервис
    rpc create (CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/v1/cloud",
            body: "*"
        };
    }

    // Получить информацию о сервисе
    rpc get (GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/v1/cloud/{service_id}"
        };
    }

    // Получить информацию о сервисах
    rpc getList (GetListRequest) returns (GetListResponse) {
        option (google.api.http) = {
            get: "/v1/cloud"
        };
    }

    // Изменить информацию о сервисе
    rpc update (UpdateRequest) returns (UpdateResponse){
        option (google.api.http) = {
            patch: "/v1/cloud/{service_id}",
            body: "*"
        };
    }

    // Удалить сервис
    rpc remove (RemoveRequest) returns (RemoveResponse) {
        option (google.api.http) = {
            delete: "/v1/cloud/{service_id}"
        };
    }

    // Изменить конфигурацию сервиса
    rpc changeConfiguration (ChangeConfigurationRequest) returns (ChangeConfigurationResponse) {
        option (google.api.http) = {
            patch: "/v1/cloud/{service_id}/configuration",
            body: "*"
        };
    }
}

message GetConfigurationListRequest {
}

message GetConfigurationListResponse {
    // Список доступных конфигураций
    repeated ServiceConfiguration configuration = 1;
}

message CreateRequest {
    // Идентификатор конфигурации
    string configuration_id = 1;

    // Название создаваемого сервиса
    string display_name = 2;

    // Описание сервиса
    string description = 3;

    oneof params {
        // Дополнительные параметры облачного mysql
        mysql.CreateParams mysql_params = 4;
    }
}

message CreateResponse {
    oneof result {
        // Информация о созданном сервисе
        Service service = 1;

        // Ошибка при создании сервиса
        mysql.CreateError mysql_error = 2;
    }
}

message GetRequest {
    // Идентификатор сервиса в формате uuid v4
    string service_id = 1;
}

message GetResponse {
    // Информация о сервисе
    Service service = 1;
}

message GetListRequest {
}

message GetListResponse {
    // Информация о сервисах
    repeated Service service = 1;
}

message UpdateRequest {
    // Идентификатор сервиса в формате uuid v4
    string service_id = 1;

    // Название сервиса
    string display_name = 2;

    // Описание сервиса
    string description = 3;
}

message UpdateResponse {
    oneof result {
        // Информация о сервисе
        Service service = 1;

        // Ошибка при обновлении информации о сервисе
        Error error = 2;
    }
    message Error {
        // Описание ошибки
        string message = 1;

        // Код ошибки
        Code code = 2;

        enum Code {
            // Зарезервированный код ошибки
            _ = 0;

            // Невалидное название сервиса
            INVALID_DISPLAY_NAME = 1;

            // Невалидное описание сервиса
            INVALID_DESCRIPTION = 2;
        }
    }
}

message RemoveRequest {
    // Идентификатор сервиса в формате uuid v4
    string service_id = 1;
}

message RemoveResponse {
    // Успешное удаление сервиса
    Success success = 1;
    message Success {
    }
}

message ChangeConfigurationRequest {
    // Идентификатор сервиса в формате uuid v4
    string service_id = 1;

    // Идентификатор новой конфигурации
    string configuration_id = 2;
}

message ChangeConfigurationResponse {
    oneof result {
        // Информация о сервисе
        Service service = 1;

        // Ошибка при изменении конфигурации сервиса
        Error error = 2;
    }
    message Error {
        // Описание ошибки
        string message = 1;

        // Код ошибки
        Code code = 2;

        enum Code {
            // Зарезервированный код ошибки
            _ = 0;

            // Некоректный статус ресурса(отличный от running/stopped)
            INVALID_STATE = 1;

            // Доступ к сервису заблокирован
            SERVICE_DISABLED = 2;

            // Переданная конфигурация не может быть применена из-за ограничений (например, в ней меньше ресурсов, чем в текущей)
            INVALID_CONFIGURATION = 3;

            // Недостаточно денег для смены конфигурации
            INSUFFICIENT_FUNDS = 4;
        }
    }
}

message Service {
    // Идентификатор сервиса в формате uuid v4
    string id = 1;

    // Идентификатор конфигурации
    string configuration_id = 2;

    // Имя сервиса
    string display_name = 3;

    // Описание сервиса
    string description = 4;

    // Статус сервиса
    Status status = 5;

    // Дата создания сервиса в формате W3C
    string created_at = 6;

    // Стоимость сервиса в день
    double price_day = 7;

    // Стоимость сервиса в месяц
    double price_month = 8;

    oneof entity {
        // Информация о конкретном сервисе - Mysql 5
        mysql.Mysql5 mysql5 = 9;

        // Информация о конкретном сервисе - Mysql 8
        mysql.Mysql8 mysql8 = 10;
    }

    // Заблокиван ли сервис
    bool manage_enabled = 11;

    // Имя сервиса для отображения у URL
    string slug = 12;

    // Идентификаторы сервисов для включения мониторинга
    repeated string monitorable_resources = 13;
    
    // Сервис находится в состоянии разблокировки
    bool unblocking = 14;
    
    // Сервис находится в состоянии миграции на другой хост
    bool migrating = 15;
    
    enum Status {
        // Создается
        CREATING = 0;

        // Запущен
        RUNNING = 1;

        // Перезагрузка
        RESTARTING = 2;

        // Остановлен
        STOPPED = 3;

        // Смена конфигурации
        RECONFIGURING = 4;
    }
}

message ServiceConfiguration {
    // Идентификатор конфигурации
    string id = 1;

    // Стоимость в день
    double price_day = 2;

    // Стоимость в месяц
    double price_month = 3;

    oneof configuration {
        // Параметры конфигурации для mysql 5
        mysql.Mysql5Configuration mysql5 = 4;

        // Параметры конфигурации для mysql 8
        mysql.Mysql8Configuration mysql8 = 5;
    }
}